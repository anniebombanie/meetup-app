{"version":3,"sources":["components/Header.js","components/Login.js","components/SearchForm.js","components/EventCard.js","components/DisplayResults.js","components/MainContent.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","lib","className","small","medium","Login","login","_callee","redirectUri","param","regenerator_default","wrap","_context","prev","next","console","log","popback","width","height","url","concat","sent","_this","props","handleLogin","access_token","stop","_this2","this","onClick","Component","SearchForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","validateSearch","state","search","hasNoInput","getEventsData","asyncToGenerator","mark","res","axios","get","accessToken","handleOnSubmit","data","events","onSubmit","preventDefault","color","Colors","SECONDARY","htmlFor","type","required","placeholder","onChange","onBlur","ALERT","ResultCard","image","event","venue","city","local_date","local_time","href","link","aria-label","rel","DisplayResults","isLoading","allEventsData","length","map","EventCard","key","id","tabIndex","MainContent","displayResults","components_SearchForm","components_DisplayResults","Footer","large","App","isLoggedIn","react","components_Header","components_MainContent","components_Login","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc3c41b3.chunk.js","sourcesContent":["import React from 'react';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { Grid, Cell } from 'react-foundation';\n\nconst Header = () => {\n  return (\n    <header>\n      <Grid className=\"display align-center\">\n        <Cell small={10} medium={8}>\n          <h1 className=\"text-center\">\n            A simple app to find upcoming meetups in your area!\n          </h1>\n        </Cell>\n      </Grid>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport popback from 'popback';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { Grid, Cell, Button, Colors } from 'react-foundation';\n\nclass Login extends Component {\n  login = async () => {\n    //oAuth key requested from meetup.com specifically for this app\n    const key = 'c7q0307j9q682rd677e2v7r841';\n    //redirectUri = set in the configuration of oath token; 'http:localhost:3000' while deving and 'https://anniebombanie.github.io/meetup-search/' once deployed\n    const redirectUri = 'https://anniebombanie.github.io/meetup-search/';\n    console.log(redirectUri);\n\n    // popback kudos to Jeffrey B [https://www.npmjs.com/package/popback]\n    // Opens login in a popup(or tab) and once that popup is redirected back to redirectUri, auto-closes and takes the data passed to it.\n    const param = await popback({\n      width: 600,\n      height: 600,\n      url: `https://secure.meetup.com/oauth2/authorize?client_id=${key}&response_type=token&redirect_uri=${redirectUri}`,\n    });\n    // pass param.access_token up to App.js\n    // need param because otherwise, will return key-value pair instead of just value\n    this.props.handleLogin(param.access_token);\n  };\n\n  render() {\n    return (\n      <Grid className=\"display align-center\">\n        <Cell className=\"text-small-centered\" small={10} medium={8}>\n          <p>\n            <strong>\n              This app requires you to have a meetup.com account to access event\n              data in your area.\n            </strong>\n          </p>\n          <p>\n            Please login below and if you don't have an account, you'll be\n            prompted to create one to continue. (This will open up a new tab or\n            popup depending on your browser.)\n          </p>\n          <form className=\"text-center\">\n            <button\n              className=\"button small-expanded\"\n              onClick={() => {\n                this.login();\n                this.props.handleLogin();\n              }}\n            >\n              LogIn via Meetup.com\n            </button>\n          </form>\n        </Cell>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { Grid, Cell, Callout, Colors } from 'react-foundation';\n\nclass SearchForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      hasNoInput: false,\n    };\n  }\n\n  // reusable method to watch user input and update state\n  handleChange = e => {\n    this.setState({\n      // in this instance, when user types something in \"search\", the value they type in is stored in state\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // make sure search field is valid\n  validateSearch = () => {\n    // if search is falsy (ie. nothing there)\n    if (!this.state.search) {\n      // then set state of error to true\n      this.setState({\n        hasNoInput: true,\n      });\n    } else {\n      // if there was an error below, now clears error message\n      this.setState({\n        hasNoInput: false,\n      });\n      // calls API when no error\n      this.getEventsData();\n    }\n  };\n\n  // make data from API\n  getEventsData = async () => {\n    let res = await axios.get(\n      `https://api.meetup.com/find/upcoming_events?access_token=${this.props.accessToken}&text=${this.state.search}`\n    );\n    // pass response data to handleOnSubmit to store in MainContent.js\n    this.props.handleOnSubmit(res.data.events);\n  };\n\n  onSubmit = e => {\n    // prevent default refresh\n    e.preventDefault();\n    this.validateSearch();\n  };\n\n  // SubmitButton = () => {\n  //   return <Button color={Colors.SUCCESS}>Find Events</Button>;\n  // };\n\n  render() {\n    return (\n      <div className=\"searchForm\">\n        <form>\n          <Grid className=\"display align-center\">\n            <Cell small={10} medium={8}>\n              <Callout color={Colors.SECONDARY}>\n                <p className=\"text-center\">You are currently loggedIn yay!</p>\n              </Callout>\n            </Cell>\n            <Cell small={10} medium={8}>\n              <label htmlFor=\"search\">\n                What kind of meetups are you looking for?\n              </label>\n              <input\n                type=\"text\"\n                name=\"search\"\n                required=\"required\"\n                placeholder=\"ie. food, design, boardgames\"\n                onChange={this.handleChange}\n                value={this.state.search}\n                onBlur={this.validateSearch}\n              />\n            </Cell>\n            {this.state.hasNoInput && (\n              <Cell small={10} medium={8}>\n                <Callout color={Colors.ALERT}>\n                  <p>\n                    Ooops! Please type something in the search field above! For\n                    example, \"hiking\".\n                  </p>\n                </Callout>\n              </Cell>\n            )}\n            <Cell small={10} medium={8}>\n              <button onClick={this.onSubmit} className=\"button expanded\">\n                Find Events\n              </button>\n            </Cell>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\n// import axios from 'axios';\n\nclass ResultCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      image: '',\n    };\n  }\n\n  // componentDidMount() {\n  //   this.getImages();\n  // }\n\n  //GET IMAGES CURRENTLY RESULTING IN CORS ERROR: (Reason: CORS header “Access-Control-Allow-Origin” missing)\n  // getImages = async () => {\n  //   console.log('getImages', this.props.accessToken);\n  //   let res = await axios.get(\n  //     `https://api.meetup.com/2/member/self/?access_token=${this.props.accessToken}/${this.props.event.group.urlname}/events/${this.props.event.id}/photos`\n  //   );\n  //   console.log(res);\n  // };\n\n  render() {\n    return (\n      <div className=\"resultCard\">\n        {/* <img src={} alt={}> */}\n        <h3>{this.props.event.name}</h3>\n        {/* <p>Id {this.props.event.id}</p> */}\n        {this.props.event.venue && (\n          <p>\n            {this.props.event.venue.name}, {this.props.event.venue.city}\n          </p>\n        )}\n        <p>\n          {this.props.event.local_date} at {this.props.event.local_time}\n        </p>\n        <p>\n          <a\n            href={this.props.event.link}\n            target=\"_blank\"\n            aria-label=\"go to event page on Meetup.com\"\n            rel=\"noopener noreferrer\"\n          >\n            More Info\n          </a>\n        </p>\n        {/* <p>urlname {this.props.event.group.urlname}</p> */}\n      </div>\n    );\n  }\n}\n\nexport default ResultCard;\n","import React, { Component } from 'react';\nimport EventCard from './EventCard';\nimport { Grid, Cell, Callout, Colors } from 'react-foundation';\n\nclass DisplayResults extends Component {\n  constructor() {\n    super();\n    this.state = {\n      event: {},\n      isLoading: false,\n    };\n  }\n\n  render() {\n    if (this.props.allEventsData.length === 0) {\n      return (\n        <Grid className=\"display align-center\">\n          <Cell small={10} medium={8}>\n            <Callout color={Colors.ALERT}>\n              <p>\n                Sorry, your search didn't return any events. Please try a\n                different search.\n              </p>\n            </Callout>\n          </Cell>\n        </Grid>\n      );\n    } else {\n      return (\n        <Grid className=\"display align-center\">\n          {this.props.allEventsData.map(event => {\n            // unique key is needed for each individual child\n            return (\n              <div>\n                <Cell small={10} medium={8}>\n                  <EventCard\n                    event={event}\n                    key={event.id}\n                    tabIndex=\"0\"\n                    allEventsData={this.state.event}\n                    accessToken={this.props.accessToken}\n                  />\n                </Cell>\n              </div>\n            );\n          })}\n        </Grid>\n      );\n    }\n  }\n}\n\nexport default DisplayResults;\n","import React, { Component } from 'react';\nimport SearchForm from './SearchForm.js';\nimport DisplayResults from './DisplayResults.js';\n\nclass MainContent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allEventsData: [],\n      displayResults: false,\n      isLoading: true,\n    };\n  }\n\n  // sets states when search button is clicked\n  handleOnSubmit = data => {\n    this.setState({\n      // stores API data\n      allEventsData: data,\n      displayResults: true,\n      isLoading: false,\n    });\n    console.log(data);\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchForm\n          handleOnSubmit={this.handleOnSubmit}\n          accessToken={this.props.accessToken}\n        />\n        {this.state.displayResults &&\n          (this.state.isLoading ? (\n            <p>Getting your results...</p>\n          ) : (\n            <DisplayResults\n              allEventsData={this.state.allEventsData}\n              accessToken={this.props.accessToken}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default MainContent;\n","import React from 'react';\nimport 'foundation-sites/dist/css/foundation.min.css';\nimport { Grid, Cell } from 'react-foundation';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Grid>\n        <Cell small={10} medium={8} large={4}>\n          <p className=\"text-center\">\n            Created by{' '}\n            <a\n              href=\"http://www.anniebombanie.com\"\n              target=\"_blank\"\n              aria-label=\"go to Annie Liew's website\"\n              rel=\"noopener noreferrer\"\n            >\n              Annie\n            </a>{' '}\n            | Using the{' '}\n            <a\n              href=\"https://www.meetup.com/en-AU/meetup_api/\"\n              target=\"_blank\"\n              aria-label=\"go to Meetup.com API website\"\n              rel=\"noopener noreferrer\"\n            >\n              Meetup.com\n            </a>{' '}\n            API\n          </p>\n        </Cell>\n      </Grid>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component, Fragment } from 'react';\n// import Foundation from 'react-foundation';\nimport Header from './components/Header.js';\nimport Login from './components/Login.js';\nimport MainContent from './components/MainContent.js';\nimport Footer from './components/Footer.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      accessToken: null,\n      isLoggedIn: false,\n    };\n  }\n\n  // method to pass to Login.js\n  handleLogin = access_token => {\n    this.setState({\n      accessToken: access_token,\n      isLoggedIn: true,\n    });\n    //only change isLoggedIn to true once accessToken is truthy (currently not working- was before)\n    // if (this.state.accessToken) {\n    //   this.setState({\n    //     isLoggedIn: true,\n    //   });\n    // }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        {!this.state.isLoggedIn ? (\n          <Login handleLogin={this.handleLogin} />\n        ) : (\n          <MainContent accessToken={this.state.accessToken} />\n        )}\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}